"""add users and roles

Revision ID: a80d429daa44
Revises:
Create Date: 2023-05-06 02:54:52.766796

"""
import sqlalchemy as sa
from alembic import op
from app import db
from app.db import Role, User

# revision identifiers, used by Alembic.
revision = "a80d429daa44"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=80), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "roles_users",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    # ### end Alembic commands ###
    admin_role = Role(name="admin")
    db.session.add(admin_role)
    user_role = Role(name="user")
    db.session.add(user_role)
    db.session.commit()

    # Add some users
    users = [
        {"email": "user1@example.com", "username": "user1", "password": "password1"},
        {"email": "user2@example.com", "username": "user2", "password": "password2"},
        {"email": "user3@example.com", "username": "user3", "password": "password3"},
    ]

    for user_data in users:
        user = User(
            email=user_data["email"],
            username=user_data["username"],
            password=user_data["password"],
        )
        db.session.add(user)
        db.session.commit()

    # Make the first user an admin
    user = User.query.filter_by(username="user1").first()
    user.roles.append(admin_role)
    db.session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("roles_users")
    op.drop_table("user")
    op.drop_table("role")
    # ### end Alembic commands ###
